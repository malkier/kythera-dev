#!/usr/bin/env ruby
#
# kythera: services for IRC networks
# bin/kythera: configuration file
#
# Copyright (c) 2011 Eric Will <rakaur@malkier.net>
# Rights to this code are documented in doc/license.txt
#

$LOAD_PATH.unshift File.expand_path('../',    File.dirname(__FILE__))
$LOAD_PATH.unshift File.expand_path('../lib', File.dirname(__FILE__))

require 'rubygems'
require 'kythera'

Dir.chdir File.expand_path('..', File.dirname(__FILE__))

#
# This is the configuration. Edit from here down.
#
# HOW TO USE THIS FILE:
#
# This file is, strictly speaking, a Ruby script. We've provided
# methods that allow the configuration to be simple and human-readable.
# Anything that works in Ruby will technically work here, but we
# suggest sticking with the basics unless you know what you're doing.
#
# Unquoted strings are interpreted as Ruby statements. Numbers do not
# need to be encapsulated within quotes. If your string is basic alphanumeric
# you can use a :symbol (prefixing your string with a colon instead of
# encapsulting it with quotations) as it is less noisy.
#
# The `use` statements are an extensibility feature. They allow you to
# pull an arbitrary Ruby module's methods into the main configuration
# parser so that you can provide configuration options for extensions.
# If you plan to do this check out the parser in `lib/kythera.rb` first.
#

# The actual configuration begins here
configure do
    use Kythera::Configuration # Base configuration

    # If you have any extensions that are installed from RubyGems,
    # you can require them here.
    #require 'extension_gem'

    # This section of the configuration is dedicated to the general
    # behavior of the service as a whole.
    #
    daemon do
        # The name of our server
        name 'services.int'

        # The server description (seen in /LINKS)
        description 'kythera irc services'

        # The nickname and email address of the person running this service.
        admin :rakaur, 'rakaur@malkier.net'

        # How much logging should we do?
        # In order of least verbose to most verbose:
        # none, fatal, error, warning, info, debug
        #
        logging :info

        # What should we do when we come across an incompatible extension?
        # Extensions are considered incompatible when they report that they do
        # not work with the current version of Kythera.
        #
        # :die    -- exit the application
        # :warn   -- print a warning and unload the extension
        # :ignore -- load the extension anyway and hope for the best
        #
        unsafe_extensions :die

        # The number of seconds between uplink connection attempts.
        reconnect_time 10

        # Should we verify an email address when we come across it?
        verify_emails false

        # The full path to your mail transfer agent.
        # This is used for things like email verification, etc.
        #
        mailer '/usr/sbin/sendmail'

        # To make sure you're reading :)
        # XXX abort "You didn't read your configuration file!"
    end

    # This section of the configuration describes the server we link to.
    # Provide the hostname or IP address in the opening block.
    #
    # You can have as many of these as you like.
    #
    uplink 'moridin.ericw.org', 6699 do
        # How important is this uplink vs other uplinks? Can be anything
        # Can be any number, positive or negative. If missing, it's
        # assumed to be zero.
        #
        priority 1

        # If the server name differs from the connection address, specify here
        name 'test.malkier.net'

        # If you need to bind to a specific IP when connecting to the
        # uplink specify it here. You can also specify a local port.
        #
        #bind '204.152.222.180'
        #bind '10.0.1.30', 55101

        # Use this to use SSL to encrypt the traffic to and from the uplink.
        # Use this only if you have configured your IRCd appropriately.
        #ssl

        # The server ID we should send to the uplink. If you're using `ts6`
        # above, this must be set. The format is [0-9][A-Z0-9][A-Z0-9].
        #
        sid '0X0'

        # The password we send to the uplink upon connection.
        send_password :send_linkage

        # The password we expect from the uplink upon connection.
        receive_password :receive_linkage

        # The name of the uplink's network
        network :malkier

        # The protocol that your ircd speaks for server-to-server links.
        #
        # While you can have multiple uplinks, you cannot have different
        # protocols for different uplinks. Things will crash and burn.
        #
        # For ircd-ratbox and charybdis this is `ts6`
        # For UnrealIRCd this is `unreal`
        # For InspIRCd this is `inspircd`
        #
        protocol :ts6

        # This is sort of a technical setting. The original IRC protocol
        # was designed in Finland and had a slight quirk with the mapping
        # of a few characters. Strict IRCds honor this. Some new IRCds do not.
        # Almost all TSora IRCds (ircd-ratbox, ircd-hybrid, etc) will want
        # the original, "rfc1459," and others such as bahamut and Unreal
        # will want "ascii."
        #
        casemapping :rfc1459
    end

    # Still reading... :)
    # XXX abort "You really should read ALL of your configuration file!"

    # This section of the configuration describes the behavior of the Shrike
    # service. If it is not specified or is empty, shrike is disabled.
    #
    service :shrike do
        # The client's nickname on IRC
        nickname :X

        # The client's username (sometimes called ident) on IRC
        username :service

        # The client's hostname on IRC
        hostname 'services.int'

        # The client's realname (sometimes called gecos) on IRC
        realname 'kythera irc services'

        # The channel the client joins and sends certain messages to
        #
        # Comment to disable
        channel '#malkier'

        # The users that have special privileges with the service
        sras :rakaur, :sycobuny
    end

    # This section of the configuration allows you to specify DNS blacklists to
    # check connecting users on the network against. These lists contain
    # addresses of known open proxy servers and other malicious things. This
    # service does not appear on the network as a client. If this section is not
    # specified or is empty, the service is disabled.
    #
    service :dnsblserv do
        # The EFnetRBL is huge and very accurate
        # See http://rbl.efnet.org/
        #
        blacklist 'rbl.efnet.org'

        # The SwiftBL is good and very well managed
        blacklist 'dnsbl.swiftbl.org'

        # The DroneBL is good, but not as well managed as SwiftBL
        # See http://dronebl.org
        #
        blacklist 'dnsbl.dronebl.org'

        # See http://ahbl.org/docs/ircbl
        blacklist 'ircbl.ahbl.org'

        # See http://www.sectoor.de/tor.php
        blacklist 'tor.dnsbl.sectoor.de'

        # See http://www.njabl.org/use.html
        blacklist 'dnsbl.njabl.org'

        # How many seconds should we wait between DNSBL lookups?
        #
        # If you set this too low Services could become unresponsive if a
        # large number of users connect within a short time period.
        #
        delay 2
    end

    # Do you want to enable the API server?
    #
    # This is used to integrate with external services, like a website. The
    # API specification is not yet complete, so this isn't really useful to
    # anyone yet. Keep an eye out though; it will be awesome.
    #
    #extension :diakofti do
        # What port do you want to run the TCP server on?
    #    port 3000

        # If you need to bind to a specific IP when connecting to the
        # uplink specify it here. You can also specify a local port.
        #
    #    bind '127.0.0.1'

        # The information we need for serving TLS/SSL
        #
        # If you're like most people you'll need to generate
        # your own, self-signed certificate rather than pay
        # an absurd sum of money to some company. In order to
        # do this you need to run something along the lines of:
        #
        #     openssl req -new -x509 -days 365 -sha1 -newkey rsa:1024 \
        #                 -nodes -keyout server.key -out server.crt \
        #                 -subj '/O=Company/OU=Department/CN=xmpp.example.com'
        #
        # Use the resulting "server.crt" file for ssl_certificate.
        # Use the resulting "server.key" file for ssl_private_key.
        #
    #    ssl_certificate 'extensions/diakofti/server.crt'
    #    ssl_private_key 'extensions/diakofti/server.key'
    #end

    # This is an example configuration block for the example extension and
    # exists to serve as an educational tool for extension developers.
    #
    #extension :example do
    #    example_setting :example
    #end
end
